# Rate limiting zone
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

# HTTP Server Block
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name abdullahabaza.me www.abdullahabaza.me;

    # Security headers for HTTP
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Server Block
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name abdullahabaza.me www.abdullahabaza.me;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/abdullahabaza.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/abdullahabaza.me/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Additional SSL optimizations
    ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout and ssl_session_tickets are already set in options-ssl-nginx.conf

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'" always;

    # Main application proxy
    location / {
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;

        # Proxy settings
        proxy_pass http://bridgex-rag-api:8000;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

        # Buffering settings
        proxy_buffering on;
        proxy_buffer_size 16k;
        proxy_busy_buffers_size 24k;
        proxy_buffers 64 4k;

        # Timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Cache control
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
    }

    # Health check endpoint with reduced logging
    location /api/health {
        access_log off;
        limit_req zone=api_limit burst=5 nodelay;

        proxy_pass http://bridgex-rag-api:8000/api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Shorter timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Static assets with caching
    location /static/ {
        proxy_pass http://bridgex-rag-api:8000/static/;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # API documentation with caching
    location /docs {
        proxy_pass http://bridgex-rag-api:8000/docs;
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }

    # Favicon handling
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1d;
    }

    # Robots.txt handling
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
