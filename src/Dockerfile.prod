
# Use multi-stage build to reduce final image size
FROM ghcr.io/astral-sh/uv:latest AS uv

FROM python:3.13-alpine3.21 AS builder

# Add metadata
LABEL maintainer="Abdullah Abaza <abdullahabaza96@gmail.com>"
LABEL description="Bridge-X-RAG - A modular Retrieval-Augmented Generation backend"
LABEL version="0.1.0"
LABEL org.opencontainers.image.source="https://github.com/dev-bridgex/bridge-x-rag"


# Set environment variables
ENV USER=fastapi \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    UV_PROJECT_ENVIRONMENT=/usr/local

# Install necessary packages and create non root user
RUN apk add --no-cache curl netcat-openbsd && \
    adduser -D -s /bin/sh $USER

# Copy uv from the previous stage
COPY --from=uv /uv /uvx /bin/

# Set working directory
ENV APP_DIR=/home/$USER/src
WORKDIR $APP_DIR

# Copy dependency files
COPY ./pyproject.toml ./uv.lock ./alembic.ini ./prestart.sh ${APP_DIR}/

# Install dependencies using uv cache
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-install-project

# Copy application code
COPY ./alembic ${APP_DIR}/alembic
COPY ./app ${APP_DIR}/app

# Sync the project again to ensure everything is up-to-date
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-install-project

# Set Python path
ENV PYTHONPATH=${APP_DIR}

# Change ownership of the application directory
RUN chown -R "$USER:$USER" $APP_DIR

# Switch to the non-root user
USER $USER

# Run the application
CMD ["uvicorn", "--workers", "4", "app.main:app", "--port", "8000", "--host", "0.0.0.0"]